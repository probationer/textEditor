<h1 style="padding: 0px 0px 10px; border-width: 0px 0px 1px; border-image: initial; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; hyphens: auto; font-weight: 500; line-height: 1; overflow-wrap: break-word; word-break: break-word; font-family: 'source sans pro', sans-serif, AvenirNextCondensed-Medium, HelveticaNeue-CondensedBold, 'Droid Sans', Helvetica, Arial, sans-serif !important; break-after: avoid !important; border-color: initial initial #000000 initial; border-style: initial initial solid initial; margin: 1.5em !important 0px !important 50px 0px !important;"><span class="label" style="margin: 0px; padding: 0px; border: 0px; text-rendering: optimizelegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; font-size: 32px; vertical-align: baseline; background: transparent;">Chapter 3.&nbsp;</span>Microkernel</h1>
<p style="padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; font-size: 16px; vertical-align: baseline; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 1.65em; font-family: Georgia, 'Droid Serif', Times, serif; hyphens: auto; color: #333333; margin: 0.75em 0px 1.25em !important;">The microkernel architecture pattern&nbsp; hello world (sometimes referred to as the plug-in architecture pattern) is a natural pattern for implementing product-based applications. A product-based application is one that is packaged and made available for download in versions as a typical third-party product. However, many companies also develop and release their internal business applications like software products, complete with versions, release notes, and pluggable features. These are also a natural fit for this pattern.&nbsp;The microkernel architecture pattern allows you to add additional application features as plug-ins to the core application, providing extensibility as well as feature separation and isolation.</p>
<section style="margin: 0px; padding: 0px; border: none; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; color: #333333; font-family: Georgia, 'Droid Serif', Times, serif; font-size: 16px;" data-type="sect1" data-pdf-bookmark="Pattern Description">
<div id="idp1103696" class="sect1" style="margin: 0px; padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background: transparent; font-family: inherit; line-height: 1.65em;">
<h1 style="margin: 40px 0px 8px; padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; font-size: 1.3em; vertical-align: baseline; background: transparent; hyphens: auto; font-weight: 500; line-height: 1.1; color: #8e0012; overflow-wrap: break-word; word-break: break-word; font-family: 'source sans pro', sans-serif, AvenirNextCondensed-Medium, HelveticaNeue-CondensedBold, 'Droid Sans', Helvetica, Arial, sans-serif !important; break-after: avoid !important;">Pattern Description</h1>
<p style="padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background: transparent; line-height: 1.65em; hyphens: auto; margin: 0.75em 0px 1.25em !important; font-family: inherit !important;">The microkernel architecture pattern consists of two types of architecture components:&nbsp;a&nbsp;<em style="margin: 0px; padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background: transparent; font-family: inherit;">core system</em>&nbsp;and&nbsp;<em style="margin: 0px; padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background: transparent; font-family: inherit;">plug-in modules</em>. Application logic is divided between independent plug-in modules and the basic core system, providing extensibility, flexibility, and isolation of application features and custom processing logic.&nbsp;<a style="margin: 0px; padding: 0px; border-width: 0px 0px 1px; border-image: initial; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; color: #070c0f; text-decoration-line: none; outline: 0px; vertical-align: baseline; background: transparent; transition: border-bottom 0.3s ease 0s; border-color: initial initial #bbbbbb initial; border-style: initial initial dashed initial;" href="https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch03.html#sapr_0301_img" data-type="xref">Figure&nbsp;3-1</a>&nbsp;illustrates the basic microkernel architecture pattern.</p>
<p style="padding: 0px; border: 0px; text-rendering: optimizeLegibility; font-kerning: normal; text-size-adjust: 100%; box-sizing: border-box; outline: 0px; vertical-align: baseline; background: transparent; line-height: 1.65em; hyphens: auto; margin: 0.75em 0px 1.25em !important; font-family: inherit !important;">The core system of the microkernel architecture pattern traditionally contains only the minimal functionality required to make the system operational. Many operating systems implement the microkernel architecture pattern, hence the origin of this pattern&rsquo;s name. From a business-application perspective, the core system is often defined as the general business logic sans custom code for special cases, special rules, or complex conditional processing.</p>
</div>
</section>